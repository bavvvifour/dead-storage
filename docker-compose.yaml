services:
  app:
    image: my-spring-boot-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_APPLICATION_NAME=bavifour
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/google_drive_clone
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_JPA_SHOW-SQL=true
      - SPRING_JPA_OPEN-IN-VIEW=false
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_MINIO_URL=http://minio:9000
      - SPRING_MINIO_ACCESS-KEY=admin
      - SPRING_MINIO_SECRET-KEY=password
      - SPRING_SERVLET_MULTIPART_MAX-FILE-SIZE=200MB
      - SPRING_SERVLET_MULTIPART_MAX-REQUEST-SIZE=200MB
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - my-network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my-network

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: google_drive_clone
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my-network
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my-network

volumes:
  minio_data:
  redis-data:

networks:
  my-network:
    driver: bridge